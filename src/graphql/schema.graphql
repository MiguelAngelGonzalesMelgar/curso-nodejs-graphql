type Query {
    hello: String!
    getPerson(name: String, age: Int): String
    getInt(age: Int!): Int
    getFloat(price: Float): Float
    getString: String
    getBoolean: Boolean
    getID: ID
    getNumbers(numbers: [Int!]!): [Int]
    
    # Products
    product(id: ID): Product
    products: [Product!]!
}

# Mutations
type Mutation {
  addProduct(dto: CreateProductInput!): Product
}

# Custom Typing
type Product {
  id: ID!
  name: String!
  price: Float!
  description: String!
  image: String!
  createdAt: String!
}

# Input, for grouping arguments(dtos)
input CreateProductInput {
  name: String!, 
  price: Int!, 
  description: 
  String!, 
  image: String!,
  categoryId: ID!
}